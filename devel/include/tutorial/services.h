// Generated by gencpp from file tutorial/services.msg
// DO NOT EDIT!


#ifndef TUTORIAL_MESSAGE_SERVICES_H
#define TUTORIAL_MESSAGE_SERVICES_H

#include <ros/service_traits.h>


#include <tutorial/servicesRequest.h>
#include <tutorial/servicesResponse.h>


namespace tutorial
{

struct services
{

typedef servicesRequest Request;
typedef servicesResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct services
} // namespace tutorial


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::tutorial::services > {
  static const char* value()
  {
    return "6a2e34150c00229791cc89ff309fff21";
  }

  static const char* value(const ::tutorial::services&) { return value(); }
};

template<>
struct DataType< ::tutorial::services > {
  static const char* value()
  {
    return "tutorial/services";
  }

  static const char* value(const ::tutorial::services&) { return value(); }
};


// service_traits::MD5Sum< ::tutorial::servicesRequest> should match 
// service_traits::MD5Sum< ::tutorial::services > 
template<>
struct MD5Sum< ::tutorial::servicesRequest>
{
  static const char* value()
  {
    return MD5Sum< ::tutorial::services >::value();
  }
  static const char* value(const ::tutorial::servicesRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::tutorial::servicesRequest> should match 
// service_traits::DataType< ::tutorial::services > 
template<>
struct DataType< ::tutorial::servicesRequest>
{
  static const char* value()
  {
    return DataType< ::tutorial::services >::value();
  }
  static const char* value(const ::tutorial::servicesRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::tutorial::servicesResponse> should match 
// service_traits::MD5Sum< ::tutorial::services > 
template<>
struct MD5Sum< ::tutorial::servicesResponse>
{
  static const char* value()
  {
    return MD5Sum< ::tutorial::services >::value();
  }
  static const char* value(const ::tutorial::servicesResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::tutorial::servicesResponse> should match 
// service_traits::DataType< ::tutorial::services > 
template<>
struct DataType< ::tutorial::servicesResponse>
{
  static const char* value()
  {
    return DataType< ::tutorial::services >::value();
  }
  static const char* value(const ::tutorial::servicesResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // TUTORIAL_MESSAGE_SERVICES_H
